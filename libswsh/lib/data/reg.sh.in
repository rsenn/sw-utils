#!/bin/sh
#
# data/reg.sh: Win32 registry 
#
# $Id: reg.sh.in 761 2008-10-09 06:23:35Z enki $
# -------------------------------------------------------------------------
@DEBUG_FALSE@test $lib_data_reg_sh || {

# reg_query <key>
# 
# Queries the value of a registry entry under the given key
# -------------------------------------------------------------------------
reg_query()
{
 (KEY=`_reg_key_name "$1"`

  reg query "$KEY" 2>&1 |
  ${SED-sed} \
    -e "/^!/ { d; n; }" \
    -e "/^\\s*\$/ { d; n; }"
  )
}

# reg_key_exists <key>
#
# Returns 0 when the given key exists.
# -------------------------------------------------------------------------
reg_key_exists()
{
 (KEY=`_reg_key_name "$1"`

  reg query "$KEY" 2>/dev/null >/dev/null)
}

# reg_key_contains <key> <entry-name>
#
# Returns 0 when the given key contains a value named entry-name.
# -------------------------------------------------------------------------
reg_key_contains()
{
 (KEY=`_reg_key_name "$1"`
  PATTERN=`echo "$KEY" | ${SED-sed} -e 's,\\\\,\\\\\\\\,g'`

  OUT=`reg query "$KEY" 2>/dev/null | ${SED-sed} -n "s/^$PATTERN\\\\\\\\//p"`
  
  [ -n "$OUT" ])
}

# -------------------------------------------------------------------------
reg_value_exists()
{
 (KEY=`_reg_key_name "$1"`

  reg query "$KEY" /v "$2" 2>/dev/null >/dev/null)
}

# -------------------------------------------------------------------------
reg_value_remove()
{
 (KEY=`_reg_key_name "$1"`

  yes "Y" | reg delete "$KEY" /v "$2") >/dev/null
}

# reg_value_set <key> <value> <data...>
# -------------------------------------------------------------------------
reg_value_set()
{
 (KEY=`_reg_key_name "$1"`
  VALUE="$2"
  shift 2
  reg delete "$KEY" /v "$VALUE"
  reg add "$KEY" /v "$VALUE" /d "$*") >/dev/null
}

# _reg_key_name <key>
# -------------------------------------------------------------------------
_reg_key_name()
{
 (IFS="\\/"
  OUT=

  set -- $1

  KEY="$1"

  case $KEY in
    HKCR) KEY="HKEY_CLASSES_ROOT" ;;
    HKLM) KEY="HKEY_LOCAL_MACHINE" ;;
    HKCU) KEY="HKEY_CURRENT_USER" ;;
    HKU)  KEY="HKEY_USERS" ;;
    HKCC) KEY="HKEY_CURRENT_CONFIG" ;;
  esac

  while [ "$#" -gt 0 ]; do
    OUT="${OUT:+$OUT\\}$KEY"
    shift
    KEY="$1"
  done
  
  echo "$OUT")
}

# reg_export <key> [file]
# -------------------------------------------------------------------------
reg_export()
{
 (KEY=`_reg_key_name "$1"`
  FILE=${2-reg$RANDOM.tmp}

  reg export "$KEY" "$FILE" 1>/dev/null 2>/dev/null || exit $?

  if [ "${2+set}" != set ]; then
    cat "$FILE"
    rm -f "$FILE"
  fi)
}

# ---[ EOF ]---------------------------------------------------------------
@DEBUG_FALSE@lib_data_reg_sh=:;}
